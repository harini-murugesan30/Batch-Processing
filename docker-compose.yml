services:
  hdfs:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs
    hostname: hdfs
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs:8020
      - HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check=false
      - CLUSTER_NAME=hadoop-cluster  
    ports:
      - "9870:9870"  # HDFS Web UI
      - "9000:9000"  # HDFS RPC
    volumes:  
      - hdfs_namenode:/hadoop/dfs/name
      - hdfs_datanode:/hadoop/dfs/data
    mem_limit: 2g
    cpus: 1

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    mem_limit: 2g
    cpus: 2
  
  spark:
    image: bitnami/spark:latest
    container_name: spark
    depends_on:
      - hdfs
      - kafka
    environment:
      - SPARK_MASTER_HOST=spark
    volumes:
      - ./spark_processor.py:/app/spark_processor.py
    ports:
      - "4040:4040"  # Spark UI
      - "7077:7077"  # Spark Master Port (if needed)
    mem_limit: 8g
    cpus: 4
  
  flask-api:
    build: ./flask_api
    container_name: flask-api
    depends_on:
      - spark
    volumes:
      - ./flask_api:/app
    ports:
      - "5000:5000"
    working_dir: /app
    command: ["python", "app.py"]
    mem_limit: 1g
    cpus: 1

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/etc/prometheus
    ports:
      - "9090:9090"
    restart: always
    mem_limit: 1g
    cpus: 1

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    mem_limit: 1g
    cpus: 1

  kafka-producer:
    build: ./kafka_producer
    container_name: kafka-producer
    depends_on:
      - kafka
    environment:
      KAFKA_SERVER: "kafka:9092"
      KAGGLE_USERNAME: ${KAGGLE_USERNAME}  
      KAGGLE_KEY: ${KAGGLE_KEY}   
    mem_limit: 2g
    cpus: 1         
    volumes:
      - ./kafka_producer:/app
      - ./kaggle:/root/.config/kaggle      
    working_dir: /app
    command: ["python", "kafka_producer.py"]
        
volumes:
  hdfs_namenode:
  hdfs_datanode:
  grafana_data:
  prometheus_data: